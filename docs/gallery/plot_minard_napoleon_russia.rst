.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_plot_minard_napoleon_russia.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_plot_minard_napoleon_russia.py:


Sankey of Napoleon's disastarous march into Russia
==================================================

This example reproduces a famous historical flow map: Charles Joseph Minard's map depicting
Napoleon's disastrously costly 1812 march on Russia during the Napoleonic Wars.

This ``sankey`` demonstrates how to build and use a custom ``matplotlib`` colormap. It also
demonstrates using the ``mplleaflet`` library to quickly and easily transform the resulting plot
into an scrolly-panny webmap.

`Click here to see the interactive webmap version. 
<http://bl.ocks.org/ResidentMario/ac2db57d1c6652ddbc4112a3d318c746>`_



.. image:: /gallery/images/sphx_glr_plot_minard_napoleon_russia_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /Users/alex/miniconda3/envs/geoplot-dev/lib/python3.6/site-packages/scipy/stats/stats.py:1633: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
      return np.add.reduce(sorted[indexer] * weights, axis=axis) / sumval
    /Users/alex/Desktop/geoplot/geoplot/geoplot.py:231: UserWarning: Please specify "legend_var" explicitly when both "hue" and "scale" are specified. Defaulting to "legend_var='hue'".
      f'Please specify "legend_var" explicitly when both "hue" and "scale" are '





|


.. code-block:: default


    import geopandas as gpd
    import geoplot as gplt
    import matplotlib.pyplot as plt
    import mplleaflet
    from matplotlib.colors import LinearSegmentedColormap

    napoleon_troop_movements = gpd.read_file(gplt.datasets.get_path('napoleon_troop_movements'))

    colors = [(215/255, 193/255, 126/255), (37/255, 37/255, 37/255)]
    cm = LinearSegmentedColormap.from_list('minard', colors)

    gplt.sankey(
        napoleon_troop_movements,
        scale='survivors', limits=(0.5, 45),
        hue='direction',
        cmap=cm
    )
    fig = plt.gcf()
    plt.savefig("minard-napoelon-russia.png", bbox_inches='tight', pad_inches=0.1)

    # Uncomment and run the following line of code to save an interactive webmap.
    # mplleaflet.save_html(fig, fileobj='minard-napoleon-russia.html')


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.730 seconds)


.. _sphx_glr_download_gallery_plot_minard_napoleon_russia.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_minard_napoleon_russia.py <plot_minard_napoleon_russia.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_minard_napoleon_russia.ipynb <plot_minard_napoleon_russia.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
